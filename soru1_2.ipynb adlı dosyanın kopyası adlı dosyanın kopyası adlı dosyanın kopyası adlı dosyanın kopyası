{"cells":[{"cell_type":"markdown","source":["1.soru, 2. veri kümesi için örnek"],"metadata":{"id":"m4Xg3whH23ne"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":68621,"status":"ok","timestamp":1701028806006,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"He3CP4WTh0zw","outputId":"80ca81e9-6923-4070-f3ca-600120d792ab"},"outputs":[{"output_type":"stream","name":"stdout","text":["All devices:  [LogicalDevice(name='/job:worker/replica:0/task:0/device:TPU:0', device_type='TPU'), LogicalDevice(name='/job:worker/replica:0/task:0/device:TPU:1', device_type='TPU'), LogicalDevice(name='/job:worker/replica:0/task:0/device:TPU:2', device_type='TPU'), LogicalDevice(name='/job:worker/replica:0/task:0/device:TPU:3', device_type='TPU'), LogicalDevice(name='/job:worker/replica:0/task:0/device:TPU:4', device_type='TPU'), LogicalDevice(name='/job:worker/replica:0/task:0/device:TPU:5', device_type='TPU'), LogicalDevice(name='/job:worker/replica:0/task:0/device:TPU:6', device_type='TPU'), LogicalDevice(name='/job:worker/replica:0/task:0/device:TPU:7', device_type='TPU')]\n"]}],"source":["import tensorflow as tf\n","import os\n","\n","\n","resolver = tf.distribute.cluster_resolver.TPUClusterResolver(tpu='grpc://' + os.environ['COLAB_TPU_ADDR'])\n","\n","tf.config.experimental_connect_to_cluster(resolver)\n","tf.tpu.experimental.initialize_tpu_system(resolver)\n","print(\"All devices: \", tf.config.list_logical_devices('TPU'))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"w6E7nqsn1RP9"},"outputs":[],"source":["strategy = tf.distribute.TPUStrategy(resolver)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19129,"status":"ok","timestamp":1701028825114,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"SwUvAAPj1dpS","outputId":"a7c570fa-bdae-457c-8f27-20339a000fb6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["from google.colab import drive\n","\n","drive.mount('/content/gdrive')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7430,"status":"ok","timestamp":1701028832535,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"DKlG0jCr1ojD","outputId":"37ff060a-2ee3-41a2-c20a-8d9747232e7d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.35.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.13.1)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.16.4 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.4)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.23.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (23.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2023.6.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.31.0)\n","Requirement already satisfied: tokenizers<0.19,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.15.0)\n","Requirement already satisfied: safetensors>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.0)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.1)\n","Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (2023.6.0)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.16.4->transformers) (4.5.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2023.7.22)\n"]}],"source":["!pip install transformers"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13763,"status":"ok","timestamp":1701028846286,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"-6021qXebw_L","outputId":"3165e825-4db6-4d62-c16b-2d0d34a79951"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: tensorflow in /usr/local/lib/python3.10/dist-packages (2.12.0)\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.4.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.6.3)\n","Requirement already satisfied: flatbuffers>=2.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (23.5.26)\n","Requirement already satisfied: gast<=0.4.0,>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.4.0)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.2.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.59.2)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.9.0)\n","Requirement already satisfied: jax>=0.3.15 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.3.25)\n","Requirement already satisfied: keras<2.13,>=2.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.12.0)\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (16.0.6)\n","Requirement already satisfied: numpy<1.24,>=1.22 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.23.5)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.3.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from tensorflow) (23.2)\n","Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.20.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow) (67.7.2)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.16.0)\n","Requirement already satisfied: tensorboard<2.13,>=2.12 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.12.0)\n","Requirement already satisfied: tensorflow-estimator<2.13,>=2.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.12.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.3.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (4.5.0)\n","Requirement already satisfied: wrapt<1.15,>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.14.1)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.34.0)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow) (0.41.3)\n","Requirement already satisfied: scipy>=1.5 in /usr/local/lib/python3.10/dist-packages (from jax>=0.3.15->tensorflow) (1.11.3)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (2.17.3)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (0.4.6)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (3.5.1)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (2.31.0)\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (0.7.2)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (1.8.1)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.13,>=2.12->tensorflow) (3.0.1)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (5.3.2)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (0.3.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.13,>=2.12->tensorflow) (1.3.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.13,>=2.12->tensorflow) (2023.7.22)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from werkzeug>=1.0.1->tensorboard<2.13,>=2.12->tensorflow) (2.1.3)\n","Requirement already satisfied: pyasn1<0.6.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.13,>=2.12->tensorflow) (0.5.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.13,>=2.12->tensorflow) (3.2.2)\n"]}],"source":["pip install tensorflow"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"executionInfo":{"elapsed":15817,"status":"ok","timestamp":1701028862078,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"Dqhm4McHb4vo","outputId":"59711e43-1447-4aaf-adc3-2a45d1d1113f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting keras==2.14\n","  Downloading keras-2.14.0-py3-none-any.whl (1.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: keras\n","  Attempting uninstall: keras\n","    Found existing installation: keras 2.12.0\n","    Uninstalling keras-2.12.0:\n","      Successfully uninstalled keras-2.12.0\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","tensorflow 2.12.0 requires keras<2.13,>=2.12.0, but you have keras 2.14.0 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed keras-2.14.0\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["keras"]}}},"metadata":{}}],"source":["pip install keras==2.14"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zXeKfvRS1qFq"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import warnings\n","warnings.filterwarnings('ignore')\n","import re\n","import string\n","from tensorflow.python.keras.models import Sequential\n","import tensorflow as tf\n","import tensorflow_datasets as tfds\n"]},{"cell_type":"markdown","source":["veri kümesi alımı ve ön işleme adımları"],"metadata":{"id":"coOdLUaOvQuz"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"js1Hz7Gr1qiK"},"outputs":[],"source":["df = pd.read_csv('/content/gdrive/My Drive/kolektifodev2/hepsiburada.csv', encoding=\"utf-8\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":365,"status":"ok","timestamp":1701028866804,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"F4BhFlNr1rFg","outputId":"930e4718-ae89-4ec8-e3cf-d6edf7be995d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Rating                                             Review\n","0       1                            3 yıldır tık demedi. :)\n","1       1                      3 yıldır kullanıyorum müthiş \n","2       1  Ürün bugün elime geçti çok fazla inceleme fırs...\n","3       1  Almaya karar verdim. Hemencecik geldi. Keyifle...\n","4       1  Günlük kullanımınızı çok çok iyi karsılıyor kı..."],"text/html":["\n","  <div id=\"df-9851e159-73bf-421a-ac1b-6556cb3556ed\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rating</th>\n","      <th>Review</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3 yıldır tık demedi. :)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>3 yıldır kullanıyorum müthiş</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Ürün bugün elime geçti çok fazla inceleme fırs...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>Almaya karar verdim. Hemencecik geldi. Keyifle...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Günlük kullanımınızı çok çok iyi karsılıyor kı...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9851e159-73bf-421a-ac1b-6556cb3556ed')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9851e159-73bf-421a-ac1b-6556cb3556ed button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9851e159-73bf-421a-ac1b-6556cb3556ed');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-922b0c07-4274-4deb-81b7-11e764b7c5a3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-922b0c07-4274-4deb-81b7-11e764b7c5a3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-922b0c07-4274-4deb-81b7-11e764b7c5a3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}],"source":["df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1701028866805,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"e1_Ep_PGaIDA","outputId":"e005c7bd-32c1-4697-c23c-20f92ca4324c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Rating                                             Review\n","0       1                            3 yıldır tık demedi. :)\n","1       1                      3 yıldır kullanıyorum müthiş \n","2       1  Ürün bugün elime geçti çok fazla inceleme fırs...\n","3       1  Almaya karar verdim. Hemencecik geldi. Keyifle...\n","4       1  Günlük kullanımınızı çok çok iyi karsılıyor kı..."],"text/html":["\n","  <div id=\"df-99807ded-0c9d-4f21-b0d6-fad8e4756ef6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rating</th>\n","      <th>Review</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3 yıldır tık demedi. :)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>3 yıldır kullanıyorum müthiş</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Ürün bugün elime geçti çok fazla inceleme fırs...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>Almaya karar verdim. Hemencecik geldi. Keyifle...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Günlük kullanımınızı çok çok iyi karsılıyor kı...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99807ded-0c9d-4f21-b0d6-fad8e4756ef6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-99807ded-0c9d-4f21-b0d6-fad8e4756ef6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-99807ded-0c9d-4f21-b0d6-fad8e4756ef6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f2704222-99b9-465b-bbc7-ce6a32ca44cf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f2704222-99b9-465b-bbc7-ce6a32ca44cf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f2704222-99b9-465b-bbc7-ce6a32ca44cf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}],"source":["df.reset_index(inplace = True)\n","df.drop(\"index\", axis = 1, inplace = True)\n","df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":495,"status":"ok","timestamp":1701028867280,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"SSdYI7NzaaNP","outputId":"159187fc-a226-4781-9057-5f099cc9b9ab"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Rating                                             Review\n","0       1                            3 yıldır tık demedi. :)\n","1       1                      3 yıldır kullanıyorum müthiş \n","2       1  ürün bugün elime geçti çok fazla inceleme fırs...\n","3       1  almaya karar verdim. hemencecik geldi. keyifle...\n","4       1  günlük kullanımınızı çok çok iyi karsılıyor kı..."],"text/html":["\n","  <div id=\"df-0ad7919e-4bd2-4c81-acfb-34c1ad7a4861\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rating</th>\n","      <th>Review</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3 yıldır tık demedi. :)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>3 yıldır kullanıyorum müthiş</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>ürün bugün elime geçti çok fazla inceleme fırs...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>almaya karar verdim. hemencecik geldi. keyifle...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>günlük kullanımınızı çok çok iyi karsılıyor kı...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ad7919e-4bd2-4c81-acfb-34c1ad7a4861')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ad7919e-4bd2-4c81-acfb-34c1ad7a4861 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ad7919e-4bd2-4c81-acfb-34c1ad7a4861');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8ce3637e-68cc-4f9b-a4cd-50ccf70547d2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8ce3637e-68cc-4f9b-a4cd-50ccf70547d2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8ce3637e-68cc-4f9b-a4cd-50ccf70547d2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}],"source":["df[\"Review\"] = df[\"Review\"].apply(lambda x: x.lower())\n","df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":14688,"status":"ok","timestamp":1701028881958,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"wGmCANIyampP","outputId":"5d75d9c7-1e4c-4500-df4d-489fa0e12665"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Rating                                             Review\n","0       1                               3 yıldır tık demedi \n","1       1                      3 yıldır kullanıyorum müthiş \n","2       1  ürün bugün elime geçti çok fazla inceleme fırs...\n","3       1  almaya karar verdim hemencecik geldi keyifle k...\n","4       1  günlük kullanımınızı çok çok iyi karsılıyor kı..."],"text/html":["\n","  <div id=\"df-294b6389-e76a-4c60-bc67-1a00f16c8e5f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rating</th>\n","      <th>Review</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3 yıldır tık demedi</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>3 yıldır kullanıyorum müthiş</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>ürün bugün elime geçti çok fazla inceleme fırs...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>almaya karar verdim hemencecik geldi keyifle k...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>günlük kullanımınızı çok çok iyi karsılıyor kı...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-294b6389-e76a-4c60-bc67-1a00f16c8e5f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-294b6389-e76a-4c60-bc67-1a00f16c8e5f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-294b6389-e76a-4c60-bc67-1a00f16c8e5f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-63b3151c-7d9d-4c92-bec2-a8e7b73ebfd1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63b3151c-7d9d-4c92-bec2-a8e7b73ebfd1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-63b3151c-7d9d-4c92-bec2-a8e7b73ebfd1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}],"source":["def remove_punctuation(text):\n","    no_punc = [words for words in text if words not in string.punctuation]\n","    word_wo_punc = \"\".join(no_punc)\n","    return word_wo_punc\n","\n","df[\"Review\"] = df[\"Review\"].apply(lambda x: remove_punctuation(x))\n","df[\"Review\"] = df[\"Review\"].apply(lambda x: x.replace(\"\\r\", \" \"))\n","df[\"Review\"] = df[\"Review\"].apply(lambda x: x.replace(\"\\n\", \" \"))\n","\n","df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":18492,"status":"ok","timestamp":1701028900440,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"kX7MXiuac81S","outputId":"6b2fcbff-242e-4f3f-ef2e-fdb9c9bc0c3d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Rating                                             Review\n","0       1                                 yıldır tık demedi \n","1       1                        yıldır kullanıyorum müthiş \n","2       1  ürün bugün elime geçti çok fazla inceleme fırs...\n","3       1  almaya karar verdim hemencecik geldi keyifle k...\n","4       1  günlük kullanımınızı çok çok iyi karsılıyor kı..."],"text/html":["\n","  <div id=\"df-5ef5ce63-e8da-4738-b518-66f77bf66fb6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rating</th>\n","      <th>Review</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>yıldır tık demedi</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>yıldır kullanıyorum müthiş</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>ürün bugün elime geçti çok fazla inceleme fırs...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>almaya karar verdim hemencecik geldi keyifle k...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>günlük kullanımınızı çok çok iyi karsılıyor kı...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ef5ce63-e8da-4738-b518-66f77bf66fb6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5ef5ce63-e8da-4738-b518-66f77bf66fb6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5ef5ce63-e8da-4738-b518-66f77bf66fb6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-881f1853-f17e-4dbd-be20-4b3f79dc0abf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-881f1853-f17e-4dbd-be20-4b3f79dc0abf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-881f1853-f17e-4dbd-be20-4b3f79dc0abf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}],"source":["def remove_numeric(corpus):\n","    output = \"\".join(words for words in corpus if not words.isdigit())\n","    return output\n","\n","df[\"Review\"] = df[\"Review\"].apply(lambda x: remove_numeric(x))\n","df.head()"]},{"cell_type":"code","source":["df[\"Rating\"] = df[\"Rating\"].astype(float)\n","df[\"Rating\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R0ge1VM5DKBF","executionInfo":{"status":"ok","timestamp":1701028900441,"user_tz":-180,"elapsed":14,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"91175020-1d7c-4b50-f9ec-b778cf444185"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0    229821\n","0.0     13676\n","Name: Rating, dtype: int64"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1701028900441,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"20ulQa_9W9PD","outputId":"327d1335-c36e-4028-ed94-2f32cf4be518"},"outputs":[{"output_type":"stream","name":"stdout","text":["0         1.0\n","1         1.0\n","2         1.0\n","3         1.0\n","4         1.0\n","         ... \n","243492    1.0\n","243493    1.0\n","243494    1.0\n","243495    1.0\n","243496    1.0\n","Name: Rating, Length: 243497, dtype: float64\n"]}],"source":["print(df['Rating'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JqNY-g__4lI2"},"outputs":[],"source":["X = df['Review'].values\n","y = df['Rating'].values\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ai9gcxmE5-qm"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":113,"referenced_widgets":["7ba7b97ce6a3457383f3ded86a528a37","11a374dac4744dfe92c905bf43daac9f","1a931e748c564354b4073b6ed3013c32","afeac3dc27b14bdca356e4aa99b867a3","f7b80a5fa29c4630b7adb1e69ca0921f","a79959536b2747b7abb3032c1218e8d7","55e1acc92d714ad3b330c8807a20ef28","eec6cd0471af42e9b9bfe9f4e0ebfb93","ed0434c44ea64887bf46dca0126a2f2b","bbfa7d59d8e448a8a71043c0cb9bf4e0","42d62eeff22c4ea1a77aef3cc7858298","67ccb7ac38c84b43b0f3310584e7d253","fef5a1381e5e4c6686057cb99952efbc","d6afdbd5fbc64d27a86ee4606e31aa3c","b806259232a34864b4349532a5abe5ba","fa8f03e4d69c472f89879235b7f7824e","696c661de3de4e4b947224b8cfbb479e","d0e6d41bb288483bb6363f4def9ff285","993e1c4571a248e9ad4034d94293982f","8d0ba85129184fc09f328b8df99cbbfd","7ff91c77ee014292867ffdbcad9d4942","ab59f5e5ab464acfa09e6d00098d0e8a","4786caa30b264d9ba8860be9a6a526bb","53482423c5e94ccb8262b240a74e64d2","c8e6e1428e214bce930bcc2e322b3bac","72a8074557a54970b79fac59bc35d072","2c904c6f204a4c00be271a3c0b3873c0","5da4750e7c79436c807dddd68b1848a9","258eda22bb6444d38af29053d138fa13","85b4977152194a2cb9cbff136cb6d48d","0e5dbf7ecf3047fe9f328c3218b20e8c","12650808d3fe4be1bac0ce30ccef5833","fb6633bddec74345a1a53f818900c0c0"]},"executionInfo":{"elapsed":15098,"status":"ok","timestamp":1701028916741,"user":{"displayName":"syt rpc","userId":"06777492962125960965"},"user_tz":-180},"id":"aV3W-RD97Cjl","outputId":"222f8d12-bec3-4f26-e17c-232ade0b0eb7"},"outputs":[{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/59.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7ba7b97ce6a3457383f3ded86a528a37"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/385 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"67ccb7ac38c84b43b0f3310584e7d253"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/263k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4786caa30b264d9ba8860be9a6a526bb"}},"metadata":{}}],"source":["from transformers import AutoTokenizer, BertForMaskedLM\n","# Büyük BERT\n","tokenizer = AutoTokenizer.from_pretrained(\"dbmdz/bert-base-turkish-uncased\")\n","# Küçük BERT\n","#tokenizer = AutoTokenizer.from_pretrained(\"ytu-ce-cosmos/turkish-base-bert-uncased\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Dzm6x2R7C-w","executionInfo":{"status":"ok","timestamp":1701028981278,"user_tz":-180,"elapsed":64821,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"e07363a3-87c1-44d7-a3f6-e8204f2fca43"},"outputs":[{"output_type":"stream","name":"stdout","text":["Max sentence length:  496\n"]}],"source":["#yorumlar için maximum token sınırı olusturma\n","max_token = []\n","for sent in X:\n","\n","\n","    input_ids = tokenizer.encode(sent, add_special_tokens=True)\n","    max_token.append(len(input_ids))\n","\n","print('Max sentence length: ', max(max_token))\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kTIXkvQV7EKc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701028981279,"user_tz":-180,"elapsed":41,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"b160c6e2-9a0f-4865-bb85-ffe19859beea"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'input_ids': [2, 31069, 1014, 6191, 14533, 3466, 9834, 1013, 5328, 2013, 7768, 5786, 2032, 2709, 1023, 9834, 1013, 15948, 2035, 1023, 16001, 5884, 2044, 2065, 2643, 27210, 1014, 1981, 3776, 1981, 2862, 1981, 2397, 12411, 19200, 2033, 13520, 10057, 3392, 26326, 1021, 2033, 3084, 24688, 2173, 1975, 19668, 5456, 2801, 1021, 2078, 10366, 19668, 31069, 1014, 14533, 2872, 2414, 7147, 10189, 25535, 3571, 22561, 1971, 5136, 18960, 1010, 12076, 2598, 24934, 1028, 2228, 2397, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'token_type_ids': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}"]},"metadata":{},"execution_count":23}],"source":["# yorum uzunluğu 100 token a göre ayarlanır\n","tokens = tokenizer.encode_plus(sent, max_length=100, truncation=True,\n","                              padding='max_length', add_special_tokens=True)\n","tokens\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7oHudZE58fAD"},"outputs":[],"source":["# vektörlerin (yorum sayısı, 100) boyutlarında matrislere dönüştürme\n","\n","def transformation(X):\n","  # set array dimensions\n","  seq_len = 100\n","\n","\n","  Xids = []\n","  Xmask = []\n","  for sentence in X: # corpustan tüm yorumların çekilmesi\n","\n","      tokens = tokenizer.encode_plus(sentence, max_length=seq_len, truncation=True,\n","                                      padding='max_length', add_special_tokens=True)\n","      # herbir yorum(sentence) vektörlere dönüştürülür.\n","\n","      # assign tokenized outputs to respective rows in numpy arrays\n","      Xids.append(tokens['input_ids']) # her bir yoruma karşılık gelen token lar listeye eklenir\n","      Xmask.append(tokens['attention_mask']) # her bir yoruma karşılık gelen yer bilgisi listeye eklenir\n","\n","  return np.array(Xids), np.array(Xmask)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8xgP66jfKfCg"},"outputs":[],"source":["# Eğitim ve test için (yorum sayısı, 100) boyutlarında matrislerin olusturulmasi\n","Xids_train, Xmask_train = transformation(X_train)\n","Xids_test, Xmask_test = transformation(X_test)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IWFjf7fUKfmb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029083370,"user_tz":-180,"elapsed":40,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"2fd7a6cf-8a15-466e-e9c3-4fdb62e41487"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[    2, 24459,  2710, ...,     0,     0,     0],\n","       [    2, 26382,  6191, ...,     0,     0,     0],\n","       [    2,  2011, 13023, ...,     0,     0,     0],\n","       ...,\n","       [    2, 31069, 25754, ...,     0,     0,     0],\n","       [    2, 31069,  1014, ...,     0,     0,     0],\n","       [    2,  6191,  2414, ...,     0,     0,     0]])"]},"metadata":{},"execution_count":28}],"source":["Xids_train"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5UwzaXWRKgrz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029083371,"user_tz":-180,"elapsed":37,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"bbc9f9a2-da46-4aa7-c35d-82aac57a04c1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Xids_train.shape  : (194797, 100)\n","Xmask_train.shape : (194797, 100)\n","Xids_test.shape   : (48700, 100)\n","Xmask_test.shape  : (48700, 100)\n"]}],"source":["print(\"Xids_train.shape  :\", Xids_train.shape)\n","print(\"Xmask_train.shape :\", Xmask_train.shape)\n","print(\"Xids_test.shape   :\", Xids_test.shape)\n","print(\"Xmask_test.shape  :\", Xmask_test.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rNy8sfj6Nrlz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029083372,"user_tz":-180,"elapsed":36,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"fc23a224-11a3-43a0-d085-e77764a1bf15"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 1., 1., ..., 1., 1., 1.])"]},"metadata":{},"execution_count":30}],"source":["y_train"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GL0gQjeoNu2h","colab":{"base_uri":"https://localhost:8080/","height":90},"executionInfo":{"status":"ok","timestamp":1701029083373,"user_tz":-180,"elapsed":35,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"fffac295-23e7-41b1-ba23-6e8375199102"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1 1 1 ... 1 1 1]\n","194797\n"]},{"output_type":"execute_result","data":{"text/plain":["\"\\nfrom sklearn.compose import ColumnTransformer\\nct = ColumnTransformer([('my_ohe', OneHotEncoder(), [0])], remainder='passthrough')\\nlabels_train = ct.fit_transform(y_trainlabel) #.toarray()\\nprint(labels_train)\\nprint(labels_train.size)\\n\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":31}],"source":["#Eğitim etiketlerinin olusturulmasi\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.preprocessing import OneHotEncoder\n","y_train_labelencoder = LabelEncoder ()\n","y_trainlabel= y_train_labelencoder.fit_transform (y_train)\n","print(y_trainlabel)\n","print(len(y_trainlabel))\n","\n","y_trainlabel=y_trainlabel.reshape(-1,1)\n","\n","labels_train=y_trainlabel\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QomEiQr9TxAn"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"62uYPXzWNvva","colab":{"base_uri":"https://localhost:8080/","height":90},"executionInfo":{"status":"ok","timestamp":1701029083373,"user_tz":-180,"elapsed":32,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"05d3d96c-bb5e-4015-970b-fb9332ac28c2"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1 1 1 ... 1 1 1]\n","48700\n"]},{"output_type":"execute_result","data":{"text/plain":["\"\\nfrom sklearn.compose import ColumnTransformer\\nct = ColumnTransformer([('my_ohe', OneHotEncoder(), [0])], remainder='passthrough')\\nlabels_test = ct.fit_transform(y_testlabel) #.toarray()\\nprint(labels_test)\\nprint(labels_test.size)\\n\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":32}],"source":["#Test etiketlerinin olusturulmasi\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.preprocessing import OneHotEncoder\n","y_test_labelencoder = LabelEncoder ()\n","y_testlabel= y_test_labelencoder.fit_transform (y_test)\n","print(y_testlabel)\n","print(len(y_testlabel))\n","\n","y_testlabel=y_testlabel.reshape(-1,1)\n","labels_test=y_testlabel\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GnD-LrINQWUG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029084739,"user_tz":-180,"elapsed":1396,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"02360276-0f0c-4c49-d030-cb0321e67b50"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<_TensorSliceDataset element_spec=(TensorSpec(shape=(100,), dtype=tf.int64, name=None), TensorSpec(shape=(100,), dtype=tf.int64, name=None), TensorSpec(shape=(1,), dtype=tf.int64, name=None))>"]},"metadata":{},"execution_count":33}],"source":["import tensorflow as tf\n","#Matris yapısını tensorflow tensörlerine dönüştürme\n","dataset_train = tf.data.Dataset.from_tensor_slices((Xids_train, Xmask_train, labels_train))\n","dataset_train\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CRcu0sUoQWq6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029084740,"user_tz":-180,"elapsed":17,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"df9fe717-27ed-4ff6-9952-3451c2c4957b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<_TensorSliceDataset element_spec=(TensorSpec(shape=(100,), dtype=tf.int64, name=None), TensorSpec(shape=(100,), dtype=tf.int64, name=None), TensorSpec(shape=(1,), dtype=tf.int64, name=None))>"]},"metadata":{},"execution_count":34}],"source":["#Matris yapısını tensorflow tensörlerine dönüştürme\n","dataset_test = tf.data.Dataset.from_tensor_slices((Xids_test, Xmask_test, labels_test))\n","dataset_test\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c-GmObrJQXER"},"outputs":[],"source":["#token lar ve yer bilgilerinin tensor olarak kullanıldığında tanımlanabilmesi için ne olduklarına dair tanımlamanın yapılması\n","def map_func(Tensor_Xids, Tensor_Xmask, Tensor_labels):\n","    # we convert our three-item tuple into a two-item tuple where the input item is a dictionary\n","    return {'input_ids': Tensor_Xids, 'attention_mask': Tensor_Xmask}, Tensor_labels\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dYuQb7bsQX79"},"outputs":[],"source":["# then we use the dataset map method to apply this transformation\n","dataset_train = dataset_train.map(map_func)\n","dataset_test = dataset_test.map(map_func)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"51vHVSaCQYgp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029085249,"user_tz":-180,"elapsed":517,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"7a8a46d3-8ea7-42d9-8782-9230f534721a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<_MapDataset element_spec=({'input_ids': TensorSpec(shape=(100,), dtype=tf.int64, name=None), 'attention_mask': TensorSpec(shape=(100,), dtype=tf.int64, name=None)}, TensorSpec(shape=(1,), dtype=tf.int64, name=None))>"]},"metadata":{},"execution_count":37}],"source":["dataset_train"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uouW_XEoQZHI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029085250,"user_tz":-180,"elapsed":11,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"224eab5e-2cec-496e-9c20-d7060581bc12"},"outputs":[{"output_type":"stream","name":"stdout","text":["<_MapDataset element_spec=({'input_ids': TensorSpec(shape=(100,), dtype=tf.int64, name=None), 'attention_mask': TensorSpec(shape=(100,), dtype=tf.int64, name=None)}, TensorSpec(shape=(1,), dtype=tf.int64, name=None))>\n"]}],"source":["dataset_test\n","print(dataset_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Tfft2aDnIzP_"},"outputs":[],"source":["#eğitim ve test tensörlerinin kaç batch ile kullanılacağı bilgisi\n","batch_size = 32\n","\n","train_ds = dataset_train.batch(batch_size)\n","val_ds = dataset_test.batch(batch_size)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yEr1qXGqJdho","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029087389,"user_tz":-180,"elapsed":20,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"fc9915e4-4dca-44ba-9f83-27a55ab5b8d6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<_BatchDataset element_spec=({'input_ids': TensorSpec(shape=(None, 100), dtype=tf.int64, name=None), 'attention_mask': TensorSpec(shape=(None, 100), dtype=tf.int64, name=None)}, TensorSpec(shape=(None, 1), dtype=tf.int64, name=None))>"]},"metadata":{},"execution_count":40}],"source":["train_ds"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NBsouovIJdQt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029154831,"user_tz":-180,"elapsed":67458,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"4a8fbf88-a1cf-4be1-9b55-c1daf043f238"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.7/2.7 MB\u001b[0m \u001b[31m26.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m119.7/119.7 kB\u001b[0m \u001b[31m12.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.3/1.3 MB\u001b[0m \u001b[31m65.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m43.6/43.6 kB\u001b[0m \u001b[31m4.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m241.2/241.2 kB\u001b[0m \u001b[31m18.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m5.2/5.2 MB\u001b[0m \u001b[31m61.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m475.2/475.2 MB\u001b[0m \u001b[31m2.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m5.5/5.5 MB\u001b[0m \u001b[31m73.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m442.0/442.0 kB\u001b[0m \u001b[31m31.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m68.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Building wheel for seqeval (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}],"source":["pip install -q tf-models-official"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mpI1fsWFJdBU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029154832,"user_tz":-180,"elapsed":38,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"65178053-dd57-4abb-c505-64b38894011a"},"outputs":[{"output_type":"stream","name":"stdout","text":["18264\n","1826\n"]}],"source":["print(len(train_ds)*3)\n","print(int(0.1*len(train_ds)*3))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3Wjz7WiVJcwM"},"outputs":[],"source":["from official.nlp import optimization\n","epochs = 10\n","steps_per_epoch = len(train_ds)\n","\n","num_train_steps = steps_per_epoch * epochs\n","num_warmup_steps = int(0.1*num_train_steps)\n","\n","init_lr = 2e-5\n","optimizer= optimization.create_optimizer(init_lr=init_lr,\n","                                          num_train_steps=num_train_steps,\n","                                          num_warmup_steps=num_warmup_steps,\n","                                          optimizer_type='adamw')\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Hu6cZcJOJcbx"},"outputs":[],"source":["def create_model():\n","    from transformers import TFAutoModel\n","    from transformers import AutoTokenizer, BertForMaskedLM\n","    from keras.layers import Input, Dropout, Dense, BatchNormalization\n","    from keras.models import Model\n","    #buyuk bert\n","    model = TFAutoModel.from_pretrained(\"dbmdz/bert-base-turkish-uncased\")\n","    #kucuk bert\n","    #model = TFAutoModel.from_pretrained(\"ytu-ce-cosmos/turkish-base-bert-uncased\")\n","\n","    input_ids = Input(shape=(100,), name='input_ids', dtype='int32')\n","    attention_mask = Input(shape=(100,), name='attention_mask', dtype='int32')\n","\n","    embeddings = model.bert(input_ids=input_ids, attention_mask=attention_mask)[\"pooler_output\"]\n","\n","\n","    x = Dense(100, activation='relu')(embeddings)\n","    x = BatchNormalization()(x)\n","    x = Dropout(0.1)(x)\n","    y = Dense(1, activation='sigmoid', name='outputs')(x)\n","\n","\n","    return Model(inputs=[input_ids, attention_mask], outputs=y)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gsO9AqgiNoN2","colab":{"base_uri":"https://localhost:8080/","height":160,"referenced_widgets":["ad68c1941e584e7e8f21dc56fb5b39aa","5ec32e0f6ad74f318acbc4d528704ab1","3d89a2563dab49f8a829cb90d19a324c","a4d06b43ea7d44c1b08fdaa20b973c3f","d4c5cd67e1d345a88930908c34c4ed8d","e70bd5cd20324e32a814e9c5c7c2466f","afd4a38620764ab5821760636fafa6cb","f41d1597192e44e39595f33c10443001","203de56df2e94cff8fff35859be1d9f3","213685bbfa7c410483abdbd7f2a76e63","693f19ebb5b0455091094e894af911f4"]},"executionInfo":{"status":"ok","timestamp":1701029216218,"user_tz":-180,"elapsed":60836,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"46cf24a2-3780-4f95-f25f-ff7afb8adcd5"},"outputs":[{"output_type":"display_data","data":{"text/plain":["tf_model.h5:   0%|          | 0.00/545M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ad68c1941e584e7e8f21dc56fb5b39aa"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some layers from the model checkpoint at dbmdz/bert-base-turkish-uncased were not used when initializing TFBertModel: ['nsp___cls', 'mlm___cls']\n","- This IS expected if you are initializing TFBertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFBertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","All the layers of TFBertModel were initialized from the model checkpoint at dbmdz/bert-base-turkish-uncased.\n","If your task is similar to the task the model of the checkpoint was trained on, you can already use TFBertModel for predictions without further training.\n"]}],"source":["with strategy.scope():\n","\n","  from keras.optimizers import Adam\n","  from keras.losses import BinaryCrossentropy\n","  from keras.metrics import Recall\n","\n","  optimizer = tf.keras.optimizers.Adam(learning_rate=0.001, beta_1=0.9,beta_2=0.999,epsilon=1e-07,ema_momentum=0.99) #==> yukarıda tanımladığımız optimizer'ı kullanmasaydık bu şekilde de optimizer'ı tanımlayabilirdik.\n","\n","  loss = BinaryCrossentropy()\n","  recall = Recall()\n","\n","  model3 = create_model()\n","  model3.compile(optimizer=optimizer, loss=loss, metrics=[tf.keras.metrics.Accuracy(),tf.keras.metrics.Precision(), tf.keras.metrics.Recall()])\n","\n","  model = []\n","  #5 aynı model\n","  model.append(model3)\n","  model.append(model3)\n","  model.append(model3)\n","  model.append(model3)\n","  model.append(model3)\n","\n",""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mo81wiJ5OfaE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701029216633,"user_tz":-180,"elapsed":451,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"c8aa6bcb-ad97-426c-971a-9bc630a2cf9a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_ids (InputLayer)         [(None, 100)]        0           []                               \n","                                                                                                  \n"," attention_mask (InputLayer)    [(None, 100)]        0           []                               \n","                                                                                                  \n"," bert (TFBertMainLayer)         TFBaseModelOutputWi  110617344   ['input_ids[0][0]',              \n","                                thPoolingAndCrossAt               'attention_mask[0][0]']         \n","                                tentions(last_hidde                                               \n","                                n_state=(None, 100,                                               \n","                                 768),                                                            \n","                                 pooler_output=(Non                                               \n","                                e, 768),                                                          \n","                                 past_key_values=No                                               \n","                                ne, hidden_states=N                                               \n","                                one, attentions=Non                                               \n","                                e, cross_attentions                                               \n","                                =None)                                                            \n","                                                                                                  \n"," dense (Dense)                  (None, 100)          76900       ['bert[0][1]']                   \n","                                                                                                  \n"," batch_normalization (BatchNorm  (None, 100)         400         ['dense[0][0]']                  \n"," alization)                                                                                       \n","                                                                                                  \n"," dropout_37 (Dropout)           (None, 100)          0           ['batch_normalization[0][0]']    \n","                                                                                                  \n"," outputs (Dense)                (None, 1)            101         ['dropout_37[0][0]']             \n","                                                                                                  \n","==================================================================================================\n","Total params: 110,694,745\n","Trainable params: 110,694,545\n","Non-trainable params: 200\n","__________________________________________________________________________________________________\n"]}],"source":["model3.summary()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p6vFc-Q-OfOL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701055732499,"user_tz":-180,"elapsed":26515876,"user":{"displayName":"syt rpc","userId":"06777492962125960965"}},"outputId":"fcb91992-1564-477f-ab24-4e90530afe56"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:AutoGraph could not transform <function Model.make_train_function.<locals>.train_function at 0x7a85f46eed40> and will run it as-is.\n","Cause: Unable to locate the source code of <function Model.make_train_function.<locals>.train_function at 0x7a85f46eed40>. Note that functions defined in certain environments, like the interactive Python shell, do not expose their source code. If that is the case, you should define them in a .py source file. If you are certain the code is graph-compatible, wrap the call using @tf.autograph.experimental.do_not_convert. Original error: could not get source code\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n"]},{"output_type":"stream","name":"stdout","text":["WARNING: AutoGraph could not transform <function Model.make_train_function.<locals>.train_function at 0x7a85f46eed40> and will run it as-is.\n","Cause: Unable to locate the source code of <function Model.make_train_function.<locals>.train_function at 0x7a85f46eed40>. Note that functions defined in certain environments, like the interactive Python shell, do not expose their source code. If that is the case, you should define them in a .py source file. If you are certain the code is graph-compatible, wrap the call using @tf.autograph.experimental.do_not_convert. Original error: could not get source code\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n","6088/6088 [==============================] - ETA: 0s - loss: 0.2236 - accuracy: 0.0000e+00 - precision: 0.9439 - recall_1: 0.9972"]},{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:AutoGraph could not transform <function Model.make_test_function.<locals>.test_function at 0x7a85f7d531c0> and will run it as-is.\n","Cause: Unable to locate the source code of <function Model.make_test_function.<locals>.test_function at 0x7a85f7d531c0>. Note that functions defined in certain environments, like the interactive Python shell, do not expose their source code. If that is the case, you should define them in a .py source file. If you are certain the code is graph-compatible, wrap the call using @tf.autograph.experimental.do_not_convert. Original error: could not get source code\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n"]},{"output_type":"stream","name":"stdout","text":["WARNING: AutoGraph could not transform <function Model.make_test_function.<locals>.test_function at 0x7a85f7d531c0> and will run it as-is.\n","Cause: Unable to locate the source code of <function Model.make_test_function.<locals>.test_function at 0x7a85f7d531c0>. Note that functions defined in certain environments, like the interactive Python shell, do not expose their source code. If that is the case, you should define them in a .py source file. If you are certain the code is graph-compatible, wrap the call using @tf.autograph.experimental.do_not_convert. Original error: could not get source code\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n","6088/6088 [==============================] - 694s 94ms/step - loss: 0.2236 - accuracy: 0.0000e+00 - precision: 0.9439 - recall_1: 0.9972 - val_loss: 35.7825 - val_accuracy: 0.0562 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 2/10\n","6088/6088 [==============================] - 523s 86ms/step - loss: 0.2170 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 112.7368 - val_accuracy: 0.0562 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 3/10\n","6088/6088 [==============================] - 522s 86ms/step - loss: 0.2170 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.8401 - val_accuracy: 0.2362 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 4/10\n","6088/6088 [==============================] - 523s 86ms/step - loss: 0.2169 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 15.1911 - val_accuracy: 0.0562 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 5/10\n","6088/6088 [==============================] - 522s 86ms/step - loss: 0.2169 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.8039 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 6/10\n","6088/6088 [==============================] - 522s 86ms/step - loss: 0.2169 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 5.6197 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 7/10\n","6088/6088 [==============================] - 522s 86ms/step - loss: 0.2168 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 29.6394 - val_accuracy: 0.0562 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 8/10\n","6088/6088 [==============================] - 523s 86ms/step - loss: 0.2169 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 6.2776 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 9/10\n","6088/6088 [==============================] - 535s 88ms/step - loss: 0.2169 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 2.2032 - val_accuracy: 0.9438 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 10/10\n","6088/6088 [==============================] - 526s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 56.7132 - val_accuracy: 0.0562 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 1/10\n","6088/6088 [==============================] - 526s 86ms/step - loss: 0.2168 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.7828 - val_accuracy: 0.1175 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 2/10\n","6088/6088 [==============================] - 525s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 6.7461 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 3/10\n","6088/6088 [==============================] - 525s 86ms/step - loss: 0.2168 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 3.8574 - val_accuracy: 0.9438 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 4/10\n","6088/6088 [==============================] - 527s 87ms/step - loss: 0.2168 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 18.6636 - val_accuracy: 0.0562 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 5/10\n","6088/6088 [==============================] - 526s 86ms/step - loss: 0.2168 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.9711 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 6/10\n","6088/6088 [==============================] - 527s 87ms/step - loss: 0.2168 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 19.2365 - val_accuracy: 0.0562 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 7/10\n","6088/6088 [==============================] - 523s 86ms/step - loss: 0.2168 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 1.5155 - val_accuracy: 0.9438 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 8/10\n","6088/6088 [==============================] - 524s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 1.0384 - val_accuracy: 0.9438 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 9/10\n","6088/6088 [==============================] - 523s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 44.9242 - val_accuracy: 0.0562 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 10/10\n","6088/6088 [==============================] - 522s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 9.5805 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 1/10\n","6088/6088 [==============================] - 527s 87ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 2.4157 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 2/10\n","6088/6088 [==============================] - 523s 86ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.6119 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 3/10\n","6088/6088 [==============================] - 523s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2674 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 4/10\n","6088/6088 [==============================] - 523s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 1.0979 - val_accuracy: 0.9438 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 5/10\n","6088/6088 [==============================] - 524s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.6408 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 6/10\n","6088/6088 [==============================] - 526s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2322 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 7/10\n","6088/6088 [==============================] - 527s 87ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2165 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 8/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 1.4869 - val_accuracy: 0.9438 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 9/10\n","6088/6088 [==============================] - 526s 86ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.4083 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 10/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.6076 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 1/10\n","6088/6088 [==============================] - 529s 87ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 1.0336 - val_accuracy: 0.9438 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 2/10\n","6088/6088 [==============================] - 525s 86ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.5539 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 3/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2167 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.4596 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 4/10\n","6088/6088 [==============================] - 526s 86ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.4001 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 5/10\n","6088/6088 [==============================] - 526s 86ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.6548 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 6/10\n","6088/6088 [==============================] - 527s 86ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.5938 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 7/10\n","6088/6088 [==============================] - 525s 86ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.3358 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 8/10\n","6088/6088 [==============================] - 526s 86ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.7080 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 9/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.3059 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 10/10\n","6088/6088 [==============================] - 527s 87ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.4139 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 1/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2202 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 2/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2165 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2219 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 3/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2165 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2311 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 4/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2165 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 7.9876 - val_accuracy: 0.0000e+00 - val_precision: 0.0000e+00 - val_recall_1: 0.0000e+00\n","Epoch 5/10\n","6088/6088 [==============================] - 530s 87ms/step - loss: 0.2165 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2164 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 6/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2165 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2164 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 7/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2166 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2164 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 8/10\n","6088/6088 [==============================] - 526s 86ms/step - loss: 0.2165 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2212 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 9/10\n","6088/6088 [==============================] - 528s 87ms/step - loss: 0.2165 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2164 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n","Epoch 10/10\n","6088/6088 [==============================] - 530s 87ms/step - loss: 0.2165 - accuracy: 0.0000e+00 - precision: 0.9438 - recall_1: 1.0000 - val_loss: 0.2163 - val_accuracy: 0.0000e+00 - val_precision: 0.9438 - val_recall_1: 1.0000\n"]}],"source":["\n","models = []\n","for i in range(len(model)):\n","    model[i].fit_generator(train_ds, validation_data= val_ds, epochs=epochs, verbose=1)\n","    models.append(model[i])\n","\n"]},{"cell_type":"markdown","source":["Değerlendirme"],"metadata":{"id":"DKrpy6dl1ZPO"}},{"cell_type":"code","source":["import numpy as np\n","def maxfound (arrayi):\n","  u, c = np.unique(arrayi, return_counts = True)\n","  xx = u[c == c.max()]\n","  return xx\n","\n","\n","y_pred1 = models[0].predict(val_ds)\n","y_pred1 = np.multiply(y_pred1, 1)\n","y_pred1=y_pred1.astype(\"int\")\n","print(y_pred1.astype(\"int\"))\n","print(y_pred1.shape)\n","y_pred_1=y_pred1.reshape((1,-1))\n","print(y_pred_1.shape)\n","yp1=maxfound(y_pred_1)\n","\n","\n","y_pred2 = models[1].predict(val_ds)\n","y_pred2 = np.multiply(y_pred2, 1)\n","y_pred2=y_pred2.astype(\"int\")\n","y_pred_2=y_pred2.reshape((1,-1))\n","yp2=maxfound(y_pred_2)\n","\n","y_pred3 = models[2].predict(val_ds)\n","y_pred3 = np.multiply(y_pred3, 1)\n","y_pred3=y_pred3.astype(\"int\")\n","y_pred_3=y_pred3.reshape((1,-1))\n","yp3=maxfound(y_pred_3)\n","\n","y_pred4 = models[3].predict(val_ds)\n","y_pred4 = np.multiply(y_pred4, 1)\n","y_pred4=y_pred4.astype(\"int\")\n","y_pred_4=y_pred4.reshape((1,-1))\n","yp4=maxfound(y_pred_4)\n","\n","y_pred5 = models[4].predict(val_ds)\n","y_pred5 = np.multiply(y_pred5, 1)\n","y_pred5=y_pred5.astype(\"int\")\n","y_pred_5=y_pred5.reshape((1,-1))\n","yp5=maxfound(y_pred_5)\n","print(yp1)\n","print(yp2)\n","print(yp3)\n","print(yp4)\n","print(yp5)\n","results=[]\n","results.append(yp1[0])\n","results.append(yp2[0])\n","results.append(yp3[0])\n","results.append(yp4[0])\n","results.append(yp5[0])\n","from sklearn.metrics import confusion_matrix, accuracy_score, classification_report\n","from sklearn.metrics import classification_report, confusion_matrix\n","print(results)\n","k=0\n","while k<5:\n","  if results[k]==maxfound(np.array(results)):\n","    y_pred = model3.predict(val_ds)\n","    print(accuracy_score(y_test, np.round(abs(y_pred)), normalize=False))\n","    print(confusion_matrix(y_test, np.round(abs(y_pred))))\n","    print(classification_report(y_test, np.round(abs(y_pred))))\n","    k=k+1\n","\n","\n","\n"],"metadata":{"id":"1BdFdJUO2MOK"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"TPU","colab":{"provenance":[],"authorship_tag":"ABX9TyPep3iM95Rb/Cfxp80X/vlk"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"7ba7b97ce6a3457383f3ded86a528a37":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_11a374dac4744dfe92c905bf43daac9f","IPY_MODEL_1a931e748c564354b4073b6ed3013c32","IPY_MODEL_afeac3dc27b14bdca356e4aa99b867a3"],"layout":"IPY_MODEL_f7b80a5fa29c4630b7adb1e69ca0921f"}},"11a374dac4744dfe92c905bf43daac9f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a79959536b2747b7abb3032c1218e8d7","placeholder":"​","style":"IPY_MODEL_55e1acc92d714ad3b330c8807a20ef28","value":"tokenizer_config.json: 100%"}},"1a931e748c564354b4073b6ed3013c32":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_eec6cd0471af42e9b9bfe9f4e0ebfb93","max":59,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ed0434c44ea64887bf46dca0126a2f2b","value":59}},"afeac3dc27b14bdca356e4aa99b867a3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bbfa7d59d8e448a8a71043c0cb9bf4e0","placeholder":"​","style":"IPY_MODEL_42d62eeff22c4ea1a77aef3cc7858298","value":" 59.0/59.0 [00:00&lt;00:00, 1.14kB/s]"}},"f7b80a5fa29c4630b7adb1e69ca0921f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a79959536b2747b7abb3032c1218e8d7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"55e1acc92d714ad3b330c8807a20ef28":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"eec6cd0471af42e9b9bfe9f4e0ebfb93":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ed0434c44ea64887bf46dca0126a2f2b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"bbfa7d59d8e448a8a71043c0cb9bf4e0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"42d62eeff22c4ea1a77aef3cc7858298":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"67ccb7ac38c84b43b0f3310584e7d253":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_fef5a1381e5e4c6686057cb99952efbc","IPY_MODEL_d6afdbd5fbc64d27a86ee4606e31aa3c","IPY_MODEL_b806259232a34864b4349532a5abe5ba"],"layout":"IPY_MODEL_fa8f03e4d69c472f89879235b7f7824e"}},"fef5a1381e5e4c6686057cb99952efbc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_696c661de3de4e4b947224b8cfbb479e","placeholder":"​","style":"IPY_MODEL_d0e6d41bb288483bb6363f4def9ff285","value":"config.json: 100%"}},"d6afdbd5fbc64d27a86ee4606e31aa3c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_993e1c4571a248e9ad4034d94293982f","max":385,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8d0ba85129184fc09f328b8df99cbbfd","value":385}},"b806259232a34864b4349532a5abe5ba":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7ff91c77ee014292867ffdbcad9d4942","placeholder":"​","style":"IPY_MODEL_ab59f5e5ab464acfa09e6d00098d0e8a","value":" 385/385 [00:00&lt;00:00, 9.21kB/s]"}},"fa8f03e4d69c472f89879235b7f7824e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"696c661de3de4e4b947224b8cfbb479e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d0e6d41bb288483bb6363f4def9ff285":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"993e1c4571a248e9ad4034d94293982f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8d0ba85129184fc09f328b8df99cbbfd":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7ff91c77ee014292867ffdbcad9d4942":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ab59f5e5ab464acfa09e6d00098d0e8a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4786caa30b264d9ba8860be9a6a526bb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_53482423c5e94ccb8262b240a74e64d2","IPY_MODEL_c8e6e1428e214bce930bcc2e322b3bac","IPY_MODEL_72a8074557a54970b79fac59bc35d072"],"layout":"IPY_MODEL_2c904c6f204a4c00be271a3c0b3873c0"}},"53482423c5e94ccb8262b240a74e64d2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5da4750e7c79436c807dddd68b1848a9","placeholder":"​","style":"IPY_MODEL_258eda22bb6444d38af29053d138fa13","value":"vocab.txt: 100%"}},"c8e6e1428e214bce930bcc2e322b3bac":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_85b4977152194a2cb9cbff136cb6d48d","max":262620,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0e5dbf7ecf3047fe9f328c3218b20e8c","value":262620}},"72a8074557a54970b79fac59bc35d072":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_12650808d3fe4be1bac0ce30ccef5833","placeholder":"​","style":"IPY_MODEL_fb6633bddec74345a1a53f818900c0c0","value":" 263k/263k [00:00&lt;00:00, 3.46MB/s]"}},"2c904c6f204a4c00be271a3c0b3873c0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5da4750e7c79436c807dddd68b1848a9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"258eda22bb6444d38af29053d138fa13":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"85b4977152194a2cb9cbff136cb6d48d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0e5dbf7ecf3047fe9f328c3218b20e8c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"12650808d3fe4be1bac0ce30ccef5833":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fb6633bddec74345a1a53f818900c0c0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ad68c1941e584e7e8f21dc56fb5b39aa":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_5ec32e0f6ad74f318acbc4d528704ab1","IPY_MODEL_3d89a2563dab49f8a829cb90d19a324c","IPY_MODEL_a4d06b43ea7d44c1b08fdaa20b973c3f"],"layout":"IPY_MODEL_d4c5cd67e1d345a88930908c34c4ed8d"}},"5ec32e0f6ad74f318acbc4d528704ab1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e70bd5cd20324e32a814e9c5c7c2466f","placeholder":"​","style":"IPY_MODEL_afd4a38620764ab5821760636fafa6cb","value":"tf_model.h5: 100%"}},"3d89a2563dab49f8a829cb90d19a324c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f41d1597192e44e39595f33c10443001","max":545150592,"min":0,"orientation":"horizontal","style":"IPY_MODEL_203de56df2e94cff8fff35859be1d9f3","value":545150592}},"a4d06b43ea7d44c1b08fdaa20b973c3f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_213685bbfa7c410483abdbd7f2a76e63","placeholder":"​","style":"IPY_MODEL_693f19ebb5b0455091094e894af911f4","value":" 545M/545M [00:07&lt;00:00, 40.7MB/s]"}},"d4c5cd67e1d345a88930908c34c4ed8d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e70bd5cd20324e32a814e9c5c7c2466f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"afd4a38620764ab5821760636fafa6cb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f41d1597192e44e39595f33c10443001":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"203de56df2e94cff8fff35859be1d9f3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"213685bbfa7c410483abdbd7f2a76e63":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"693f19ebb5b0455091094e894af911f4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}